#!/usr/bin/env python
import sys
import argparse
from flowermodel.argparsefuncs import *

if __name__ == "__main__":
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    if len(sys.argv)==1:
        parser.print_help(sys.stderr)
        sys.exit(1)

    subparsers = parser.add_subparsers()
    
    #### blob_parser ####   
    blob_parser = subparsers.add_parser("blob", help='Find all the blobs in the image', formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    blob_parser.add_argument("--filename", type=str, metavar='<path>', required=True,
                            help="The video file of time-course of GFP/RFP-tagged cells.")
    blob_parser.add_argument("--blob-index", type=int, metavar='<value>', required=True,
                            help='Index of the video frame to do the blob detection on')                            
    blob_parser.add_argument("--out-dir", type=str, metavar='<path>', default='../data/blobs/', 
                            help='Output directory where to store the blob coordinates.') 
                            
    blob_parser.set_defaults(func=get_frame_blobs)

    #### framecount_parser ####
    framecount_parser = subparsers.add_parser("framecount", help='Count the number of frames in video.', formatter_class=argparse.ArgumentDefaultsHelpFormatter)    
    framecount_parser.add_argument("--filename", type=str, metavar='<path>', required=True,
                            help="The video file of time-course of GFP/RFP-tagged cells.")

    framecount_parser.set_defaults(func=count_frames)

    args = parser.parse_args()
    args.func(args)